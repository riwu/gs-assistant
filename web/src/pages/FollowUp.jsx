import React from 'react';
import { Table } from 'antd';
import chrono from 'chrono-node';
import moment from 'moment';

const formatDate = date => date.format('YMMDDTHHmm00');

const FollowUp = (props) => {
  const results = chrono.parse(props.data);
  const dates = results.reduce((acc, result) => {
    const key =
      moment(result.start.date()).format('DD MMM YY, hh:mm a') +
      (result.end ? ` - ${moment(result.end.date()).format('hh:mm a')}` : '');
    acc[key] = result;
    return acc;
  }, {});

  return (
    <Table
      pagination={{ hideOnSinglePage: true }}
      dataSource={Object.entries(dates).map(([text, date]) => ({ text, date }))}
      rowKey="text"
      columns={[
        { title: 'Date', dataIndex: 'text' },
        {
          title: 'Action',
          render: ({ date }) => (
            <a
              target="_blank"
              rel="noopener noreferrer"
              href={
                'https://calendar.google.com/calendar/r/eventedit?text=Meeting' +
                `&dates=${formatDate(moment(date.start.date()))}/${
                  date.end
                    ? formatDate(moment(date.end.date()))
                    : formatDate(moment(date.start.date()).add(1, 'h'))
                }` +
                `&details=${encodeURIComponent('This meeting scheduling is auto-generated by GS Assistant.')}` +
                `&location=${encodeURIComponent('Mapletree Anson Level 14 MP1')}`
              }
            >
              Setup meeting
            </a>
          ),
        },
      ]}
    />
  );
};

export default FollowUp;
